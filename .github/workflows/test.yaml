name: test
on:
  push:
  pull_request:
  schedule:
    - cron: "43 7 */14 * *" # every two weeks, time chosen by RNG
jobs:
  # Required tests
  required-tests:
    name: "Required Tests: ${{ matrix.toxenv }}"
    runs-on: ${{ matrix.os }}
    # https://github.community/t/duplicate-checks-on-push-and-pull-request-simultaneous-event/18012/5
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != 'eventlet/eventlet'
    timeout-minutes: 10
    services:
      mysql:
        image: mysql:8.0
        env: { MYSQL_ALLOW_EMPTY_PASSWORD: yes }
        ports: ["3306:3306"]
        options: --health-cmd="mysqladmin ping" --health-timeout=5s --health-retries=5 --health-interval=5s
      postgres:
        image: postgres:13
        env: { POSTGRES_PASSWORD: "secret" }
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-timeout 5s --health-retries 5 --health-interval 5s
    env:
      EVENTLET_DB_TEST_AUTH: '{"psycopg2": {"host": "127.0.0.1", "port": 5432, "user": "postgres", "password": "secret"}, "MySQLdb": {"host": "127.0.0.1", "port": 3306, "passwd": "", "user": "root"}}'
    strategy:
      fail-fast: false
      matrix:
        include:
          - { py: 3.9, toxenv: py39-epolls, os: ubuntu-latest }
          - { py: 3.9, toxenv: py39-openssl, os: ubuntu-latest }
          - { py: 3.9, toxenv: py39-poll, os: ubuntu-latest }
          - { py: 3.9, toxenv: py39-selects, os: ubuntu-latest }
          - { py: 3.9, toxenv: py39-dnspython1, os: ubuntu-latest }
          - { py: 3.9, toxenv: py39-asyncio, os: ubuntu-latest }
          - { py: "3.10", toxenv: py310-epolls, os: ubuntu-latest }
          - { py: "3.10", toxenv: py310-poll, os: ubuntu-latest }
          - { py: "3.10", toxenv: py310-selects, os: ubuntu-latest }
          - { py: "3.10", toxenv: ipv6, os: ubuntu-latest }
          - { py: "3.10", toxenv: py310-asyncio, os: ubuntu-latest }
          - { py: "3.11", toxenv: py311-epolls, os: ubuntu-latest }
          - { py: "3.11", toxenv: py311-asyncio, os: ubuntu-latest }
          - { py: "3.12", toxenv: py312-epolls, os: ubuntu-latest }
          - { py: "3.12", toxenv: py312-asyncio, os: ubuntu-latest }
          - { py: "3.13", toxenv: py313-epolls, os: ubuntu-latest }
          - { py: "3.13", toxenv: py313-asyncio, os: ubuntu-latest }

    steps:
      - name: install system packages
        run: sudo apt install -y --no-install-recommends ccache libffi-dev default-libmysqlclient-dev libpq-dev libssl-dev libzmq3-dev

      - uses: actions/checkout@v4
      - name: cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.toxenv }}-${{ hashFiles('.github/workflows/test.yaml', 'setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: cache tox
        uses: actions/cache@v4
        with:
          path: .tox
          key: ${{ runner.os }}-tox-${{ matrix.toxenv }}-${{ hashFiles('tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-tox-
            ${{ runner.os }}-

      - name: setup python ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: install codecov, tox
        run: pip install codecov tox
      - run: env
      - name: run tests
        run: tox --verbose --verbose -e ${{ matrix.toxenv }}
      - name: codecov
        run: codecov --flags=$(echo ${{ matrix.toxenv }} |tr -d -- '-.')

    steps:
      - name: install system packages
        run: sudo apt install -y --no-install-recommends ccache libffi-dev default-libmysqlclient-dev libpq-dev libssl-dev libzmq3-dev

      - uses: actions/checkout@v4
      - name: cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.toxenv }}-${{ hashFiles('.github/workflows/test.yaml', 'setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: cache tox
        uses: actions/cache@v4
        with:
          path: .tox
          key: ${{ runner.os }}-tox-${{ matrix.toxenv }}-${{ hashFiles('tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-tox-
            ${{ runner.os }}-

      - name: setup python ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: install codecov, tox
        run: pip install codecov tox
      - run: env
      - name: run tests
        run: tox --verbose --verbose -e ${{ matrix.toxenv }}
      - name: codecov
        run: codecov --flags=$(echo ${{ matrix.toxenv }} |tr -d -- '-.')

  tox-macos:
    name: "macOS tox ${{ matrix.toxenv }}"
    continue-on-error: ${{ matrix.ignore-error }}
    runs-on: ${{ matrix.os }}
    # https://github.community/t/duplicate-checks-on-push-and-pull-request-simultaneous-event/18012/5
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != 'eventlet/eventlet'
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - { py: "3.12", toxenv: py312-asyncio, ignore-error: false, os: macos-latest }
          - { py: "3.13", toxenv: py313-asyncio, ignore-error: false, os: macos-latest }
          # This isn't working very well at the moment, but that might just be
          # tox config? In any case main focus is on asyncio so someone can
          # revisit separately.
          #- { py: "3.12", toxenv: py312-kqueue, ignore-error: false, os: macos-latest }

    steps:
      - uses: actions/checkout@v4
      - name: install codecov, tox
        run: pip install codecov tox
      - run: env
      - name: run tests
        run: tox --verbose --verbose -e ${{ matrix.toxenv }}
      - name: codecov
        run: codecov --flags=$(echo ${{ matrix.toxenv }} |tr -d -- '-.')
